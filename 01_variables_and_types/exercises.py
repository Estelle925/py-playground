#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
第1章：变量与数据类型 - 练习题

完成以下练习题，加深对Python变量和数据类型的理解
"""

print("第1章练习题：变量与数据类型")
print("=" * 40)

# ============================================================================
# 练习1：基本数据类型识别
# ============================================================================
print("\n练习1：识别下列变量的数据类型")
print("-" * 30)

# TODO: 运行下面的代码，观察输出结果，并在注释中写出每个变量的类型
variables = [
    42,           # 类型：
    3.14,         # 类型：
    "Hello",      # 类型：
    True,         # 类型：
    None,         # 类型：
    [1, 2, 3],    # 类型：
    (1, 2, 3),    # 类型：
    {"a": 1},     # 类型：
    {1, 2, 3},    # 类型：
]

for i, var in enumerate(variables, 1):
    print(f"{i}. {repr(var):>15} -> 类型: {type(var).__name__}")

# ============================================================================
# 练习2：变量赋值和命名
# ============================================================================
print("\n练习2：变量赋值和命名")
print("-" * 30)

# TODO: 创建以下变量并赋值
# 1. 创建一个变量存储你的姓名
# your_name = 

# 2. 创建一个变量存储你的年龄
# your_age = 

# 3. 创建一个变量存储你的身高（浮点数）
# your_height = 

# 4. 创建一个变量表示你是否是学生（布尔值）
# is_student = 

# 5. 使用多重赋值创建三个变量 x, y, z，分别赋值为 10, 20, 30
# x, y, z = 

# TODO: 取消下面代码的注释并运行
# print(f"姓名: {your_name}")
# print(f"年龄: {your_age}")
# print(f"身高: {your_height}")
# print(f"是学生: {is_student}")
# print(f"x={x}, y={y}, z={z}")

# ============================================================================
# 练习3：类型转换
# ============================================================================
print("\n练习3：类型转换")
print("-" * 30)

# TODO: 完成以下类型转换
str_number = "123"
str_float = "45.67"
int_number = 100
float_number = 3.14

# 1. 将字符串 "123" 转换为整数
# converted_int = 

# 2. 将字符串 "45.67" 转换为浮点数
# converted_float = 

# 3. 将整数 100 转换为字符串
# converted_str = 

# 4. 将浮点数 3.14 转换为整数（注意：会丢失小数部分）
# converted_int_from_float = 

# TODO: 取消下面代码的注释并运行
# print(f"'{str_number}' -> {converted_int} (类型: {type(converted_int)})")
# print(f"'{str_float}' -> {converted_float} (类型: {type(converted_float)})")
# print(f"{int_number} -> '{converted_str}' (类型: {type(converted_str)})")
# print(f"{float_number} -> {converted_int_from_float} (类型: {type(converted_int_from_float)})")

# ============================================================================
# 练习4：布尔值转换
# ============================================================================
print("\n练习4：布尔值转换")
print("-" * 30)

# TODO: 预测下列表达式的布尔值，然后运行验证
test_values = [
    0,
    1,
    -1,
    "",
    " ",
    "0",
    "False",
    [],
    [0],
    {},
    {"key": None},
    None
]

print("预测下列值转换为布尔值的结果：")
for value in test_values:
    # TODO: 在运行前先预测结果，然后验证
    print(f"{repr(value):>15} -> {bool(value)}")

# ============================================================================
# 练习5：变量交换
# ============================================================================
print("\n练习5：变量交换")
print("-" * 30)

# TODO: 用三种不同的方法交换两个变量的值
a, b = 10, 20
print(f"交换前: a = {a}, b = {b}")

# 方法1：使用Python的多重赋值（推荐）
# a, b = 
print(f"方法1交换后: a = {a}, b = {b}")

# 重置变量
a, b = 10, 20

# 方法2：使用临时变量
# temp = 
# a = 
# b = 
print(f"方法2交换后: a = {a}, b = {b}")

# 重置变量
a, b = 10, 20

# 方法3：使用算术运算（仅适用于数字）
# a = a + b
# b = 
# a = 
print(f"方法3交换后: a = {a}, b = {b}")

# ============================================================================
# 练习6：变量作用域
# ============================================================================
print("\n练习6：变量作用域")
print("-" * 30)

global_var = "我是全局变量"

def scope_test():
    local_var = "我是局部变量"
    global global_var
    print(f"函数内部 - 全局变量: {global_var}")
    print(f"函数内部 - 局部变量: {local_var}")
    
    # TODO: 修改全局变量的值
    # global_var = 

# TODO: 调用函数
# scope_test()
# print(f"函数外部 - 全局变量: {global_var}")

# TODO: 尝试访问局部变量（这会产生错误）
# print(f"函数外部 - 局部变量: {local_var}")  # 取消注释会报错

# ============================================================================
# 练习7：综合应用
# ============================================================================
print("\n练习7：综合应用 - 个人信息管理")
print("-" * 30)

# TODO: 创建一个简单的个人信息管理程序
# 要求：
# 1. 定义变量存储个人信息（姓名、年龄、身高、体重、是否已婚）
# 2. 计算BMI指数（BMI = 体重(kg) / 身高(m)²）
# 3. 根据BMI值判断体重状态
# 4. 输出格式化的个人信息报告

# 个人信息变量
# name = 
# age = 
# height_cm = 
# weight_kg = 
# is_married = 

# BMI计算
# height_m = height_cm / 100  # 转换为米
# bmi = 

# BMI状态判断
# if bmi < 18.5:
#     status = "偏瘦"
# elif bmi < 24:
#     status = "正常"
# elif bmi < 28:
#     status = "偏胖"
# else:
#     status = "肥胖"

# 输出报告
# print(f"""
# ===== 个人信息报告 =====
# 姓名: {name}
# 年龄: {age}岁
# 身高: {height_cm}cm
# 体重: {weight_kg}kg
# 婚姻状况: {'已婚' if is_married else '未婚'}
# BMI指数: {bmi:.2f}
# 体重状态: {status}
# =====================
# """)

print("\n练习完成！请查看solutions.py文件获取参考答案。")